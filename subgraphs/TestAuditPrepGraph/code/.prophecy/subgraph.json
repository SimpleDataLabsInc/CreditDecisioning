{
  "id" : "8u1LTU4s5c2HpR7a1Vzjc",
  "component" : "Subgraph",
  "metadata" : {
    "label" : "",
    "slug" : "",
    "x" : 0,
    "y" : 0,
    "phase" : 1,
    "cache" : false,
    "detailedStats" : false,
    "isImported" : false
  },
  "ports" : {
    "inputs" : [ {
      "id" : "BxO9iceFP-GIRXTQmnXsl",
      "slug" : "in0"
    }, {
      "id" : "vlPDbkPGFjAq6Uh-nESI5",
      "slug" : "in1"
    } ],
    "outputs" : [ {
      "id" : "69JY0HvpxAH0-WnfR461q",
      "slug" : "out0"
    } ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false
  },
  "properties" : {
    "packageName" : "com.contoso"
  },
  "connections" : [ {
    "id" : "dlt01YkNLjsLuRDoxj5I7",
    "source" : "HOdEprdcStNcXo5qBsVJq",
    "sourcePort" : "lw3FBwJT-Af1rnH-9qK_Y",
    "target" : "2no60LIW-6Yn3_3EDN6g9",
    "targetPort" : "e225SxW4Snwr2zOTCxtwk"
  }, {
    "id" : "3yykUTJqvxjn7LSMrBsBe",
    "source" : "4j_rbye3VpJCDDdf0N_dx",
    "sourcePort" : "wCUnSUAs0zV8ZdE8msVTV",
    "target" : "HOdEprdcStNcXo5qBsVJq",
    "targetPort" : "pTy6vXN_1bLkYrPlI_xeZ"
  }, {
    "id" : "sEm1cDqc1D5V8ZswHHGKW",
    "source" : "8u1LTU4s5c2HpR7a1Vzjc",
    "sourcePort" : "BxO9iceFP-GIRXTQmnXsl",
    "target" : "4j_rbye3VpJCDDdf0N_dx",
    "targetPort" : "vHOhNWrcaoyuGCL2WTUCo"
  }, {
    "id" : "OBFj4SIuuKK-cBNIiYexN",
    "source" : "2no60LIW-6Yn3_3EDN6g9",
    "sourcePort" : "GMa2wJPGqDoDWWhNxtoML",
    "target" : "8u1LTU4s5c2HpR7a1Vzjc",
    "targetPort" : "69JY0HvpxAH0-WnfR461q"
  }, {
    "id" : "7SAw9TPtg2XhC5dXpWYIl",
    "source" : "8u1LTU4s5c2HpR7a1Vzjc",
    "sourcePort" : "vlPDbkPGFjAq6Uh-nESI5",
    "target" : "HOdEprdcStNcXo5qBsVJq",
    "targetPort" : "ONfJCVD5hDApi0WmybIPl"
  } ],
  "processes" : {
    "HOdEprdcStNcXo5qBsVJq" : {
      "id" : "HOdEprdcStNcXo5qBsVJq",
      "component" : "Join",
      "metadata" : {
        "label" : "ByCustomer_1",
        "slug" : "ByCustomer_1",
        "x" : 411.1183148451298,
        "y" : 253.3499999999999,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "pTy6vXN_1bLkYrPlI_xeZ",
          "slug" : "in0"
        }, {
          "id" : "ONfJCVD5hDApi0WmybIPl",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "lw3FBwJT-Af1rnH-9qK_Y",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.ID = in1.CUSTOMER_ID"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ ],
        "hints" : [ {
          "id" : "iiK-fNmMV0NQibICZ2VdF$$6CVO6WeK6KAAMazX5SsrZ",
          "alias" : "in0",
          "hintType" : "none",
          "propagateColumns" : false
        }, {
          "id" : "sfazQfk8N1M9JnPJD6SAy$$xBo0ts6EFqSTlzRafEuX7",
          "alias" : "in1",
          "hintType" : "none",
          "propagateColumns" : false
        } ],
        "allIn1" : null,
        "activeTab" : "conditions",
        "columnsSelector" : [ "iiK-fNmMV0NQibICZ2VdF$$6CVO6WeK6KAAMazX5SsrZ##ID", "sfazQfk8N1M9JnPJD6SAy$$xBo0ts6EFqSTlzRafEuX7##CUSTOMER_ID" ],
        "allIn0" : null,
        "whereClause" : null,
        "headAlias" : "in0"
      }
    },
    "2no60LIW-6Yn3_3EDN6g9" : {
      "id" : "2no60LIW-6Yn3_3EDN6g9",
      "component" : "Reformat",
      "metadata" : {
        "label" : "ForSCD2_1",
        "slug" : "ForSCD2_1",
        "x" : 626.5517826349597,
        "y" : 253.34999999999997,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "e225SxW4Snwr2zOTCxtwk",
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "GMa2wJPGqDoDWWhNxtoML",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "importLanguage" : "python",
        "expressions" : [ {
          "target" : "CUSTOMER_ID",
          "expression" : {
            "format" : "sql",
            "expression" : "CUSTOMER_ID"
          },
          "description" : "",
          "_row_id" : "975382435"
        }, {
          "target" : "CUSTOMER_NAME",
          "expression" : {
            "format" : "sql",
            "expression" : "CUSTOMER_NAME"
          },
          "description" : "",
          "_row_id" : "442201697"
        }, {
          "target" : "FICORange",
          "expression" : {
            "format" : "sql",
            "expression" : "FICORange"
          },
          "description" : "",
          "_row_id" : "2073488715"
        }, {
          "target" : "date_FICORange_obtained",
          "expression" : {
            "format" : "sql",
            "expression" : "date_add(to_date(date_FICORange_obtained, 'dd-MM-yy'), 0)"
          },
          "description" : "",
          "_row_id" : "699895414"
        }, {
          "target" : "FICO_valid_until_date",
          "expression" : {
            "format" : "sql",
            "expression" : "date_add(to_date(date_FICORange_obtained, 'dd-MM-yy'), (120))"
          },
          "description" : "",
          "_row_id" : "55631893"
        }, {
          "target" : "minFlag",
          "expression" : {
            "format" : "sql",
            "expression" : "lit(true)"
          },
          "description" : "",
          "_row_id" : "1435397651"
        }, {
          "target" : "maxFlag",
          "expression" : {
            "format" : "sql",
            "expression" : "lit(true)"
          },
          "description" : "",
          "_row_id" : "631697596"
        } ],
        "importString" : "",
        "activeTab" : "expressions",
        "columnsSelector" : [ "e225SxW4Snwr2zOTCxtwk$$e54QQlsfKAG1svvIwF_HS##CUSTOMER_ID", "e225SxW4Snwr2zOTCxtwk$$e54QQlsfKAG1svvIwF_HS##FICORange", "e225SxW4Snwr2zOTCxtwk$$e54QQlsfKAG1svvIwF_HS##CUSTOMER_NAME", "e225SxW4Snwr2zOTCxtwk$$e54QQlsfKAG1svvIwF_HS##date_FICORange_obtained" ]
      }
    },
    "4j_rbye3VpJCDDdf0N_dx" : {
      "id" : "4j_rbye3VpJCDDdf0N_dx",
      "component" : "Script",
      "metadata" : {
        "label" : "Fico_Mod_1",
        "slug" : "Fico_Mod_1",
        "x" : 203.2,
        "y" : 130.8,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "vHOhNWrcaoyuGCL2WTUCo",
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "wCUnSUAs0zV8ZdE8msVTV",
          "slug" : "out0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "ID",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "FICORange",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "date_FICORange_obtained",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          }
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : true
      },
      "properties" : {
        "script" : "#from pyspark.sql.functions import max, floor, rand, date_add, split, format_string, element_at\n#import _root.pyspark.sql.utils.AnalysisException\nfrom pyspark.sql.utils import AnalysisException\ntry:\n    old_df = spark.read.format(\"delta\").load(\"dbfs:/FileStore/data/FICO_table_history\")\n    # Get the previous max date by ID\n    # Add some random wiggle to the FICO scores\n    # Select the same columns again to maintain order\n    ws = Window.partitionBy(\"CUSTOMER_ID\").orderBy(col(\"FICO_valid_until_date\").desc())\n    new_src = old_df.withColumn(\"row_num\", row_number().over(ws)) \\\n        .where(\"row_num == 1\") \\\n        .drop(\"row_num\")\n    w = new_src.withColumn(\"date_FICORange_obtained\", date_format(date_add(\"date_FICORange_obtained\", 1), \"dd-MM-yy\")) \\\n        .withColumn(\"variation\", floor((rand() - 0.5) * 50).cast(\"integer\")) \\\n        .withColumn(\"ficosplit\", split(col(\"FICORange\"), \"-\"))\\\n        .withColumn(\"FICORange\", format_string(\"%d-%d\", (element_at(col(\"ficosplit\"), 1) + col(\"variation\")).cast(\"int\"), (element_at(col(\"ficosplit\"), 2) + col(\"variation\")).cast(\"int\"))) \\\n        .drop(\"ficosplit\") \\\n        .drop(\"variation\") \\\n        .select(col(\"CUSTOMER_ID\").alias(\"ID\"), \"FICORange\", \"date_FICORange_obtained\")\n    out0 = w\nexcept AnalysisException as e:\n    out0 = in0",
        "scriptMethodHeader" : "def Script(spark: SparkSession, in0: DataFrame) -> DataFrame:",
        "scriptMethodFooter" : "    return out0"
      }
    }
  }
}